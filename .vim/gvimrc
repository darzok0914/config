source ~/.vim/vimrc.bepo
source ~/.vim/plugin/fugitive.vim

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set nobackup		" do not keep any backup file
set history=50		" keep 50 lines of command line history
set ruler           " show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
syntax on
set hlsearch

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

endif " has("autocmd")
"
set nu
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]\  
set statusline+=%{fugitive#statusline()}
set tabstop=2
set shiftwidth=2
set smartindent " sure about it ? :(
set expandtab
set autoindent	" always set autoindenting on
set backupdir=/var/tmp
set dir=/var/tmp

let mapleader="Ã¨"
lmap <S-Space> <ESC>
 
" Change the style of the netrw's output
let g:netrw_liststyle=3
set cul
set cuc
colorscheme molokai 
set laststatus=2

nmap <C-S-P> :call <SID>SynStack()<CR>
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L
